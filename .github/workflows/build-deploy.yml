name: Build, Push image to ACR, Deploy to AKS

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ACR_NAME: ${{ secrets.ACR_NAME }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AKS_NAME: ${{ secrets.AKS_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure
        run: |
          az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID

      - name: Log in to ACR
        run: |
          az acr login --name $ACR_NAME

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t $ACR_NAME.azurecr.io/producer:latest --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Log in to Azure
        run: |
          az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group $AZURE_RESOURCE_GROUP --name $AKS_NAME

      - name: Deploy to AKS
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: |
          envsubst < k8s/producer/deployment.yaml | kubectl apply -f -
          kubectl apply -f k8s/producer/service.yaml --overwrite
          kubectl apply -f k8s/rabbit-mq/ --overwrite